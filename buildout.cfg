[buildout]
extends = 
    http://dist.plone.org/release/5.0.6/versions.cfg
    https://raw.githubusercontent.com/collective/collective.solr/master/solr-4.10.x.cfg
    solr.cfg
extends-cache = extends-cache
show-picked-versions = true
extensions = mr.developer
parts =
    instance
    test
    code-analysis
    omelette
    solr-download
    solr-instance
develop = .
auto-checkout = *


[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    Pillow
    plonetraining.solr_example [test]
    collective.solr
    collective.dexteritytextindexer
    collective.loremipsum
    eea.facetednavigation


[sources]
#collective.solr = git https://github.com/collective/collective.solr branch=master
collective.loremipsum = git https://github.com/collective/collective.loremipsum branch=master


[solr-instance]
autoCommitMaxTime = 5000
index +=
    name:title_autocomplete type:text_auto indexed:true stored:true
    name:description_autocomplete type:text_desc indexed:true stored:true
additional-solrconfig =
  <!-- =================================================================== -->
  <!-- AUTOCOMPLETE                                                        -->
  <!-- =================================================================== -->
  <!-- request handler to return typeahead suggestions -->
  <requestHandler name="/autocomplete" class="solr.SearchHandler">
    <lst name="defaults">
      <str name="echoParams">explicit</str>
      <str name="defType">edismax</str>
      <str name="rows">10</str>
      <str name="fl">description_autocomplete,title_autocomplete,score</str>
      <str name="qf">title_autocomplete^30 description_autocomplete^50.0</str>
      <str name="pf">title_autocomplete^30 description_autocomplete^50.0</str>
      <str name="group">true</str>
      <str name="group.field">title_autocomplete</str>
      <str name="group.field">description_autocomplete</str>
      <str name="sort">score desc</str>
      <str name="group.sort">score desc</str>
    </lst>
  </requestHandler>

  <!-- =================================================================== -->
  <!-- SUGGEST                                                             -->
  <!-- =================================================================== -->
   <!-- Spell Check

        The spell check component can return a list of alternative spelling
        suggestions.

        http://wiki.apache.org/solr/SpellCheckComponent
     -->
  <searchComponent name="spellcheck" class="solr.SpellCheckComponent">

    <str name="queryAnalyzerFieldType">SearchableText</str>

    <!-- Multiple "Spell Checkers" can be declared and used by this
         component
      -->

    <!-- a spellchecker built from a field of the main index -->
    <lst name="spellchecker">
      <str name="name">default</str>
      <str name="field">SearchableText</str>
      <str name="classname">solr.DirectSolrSpellChecker</str>
      <!-- the spellcheck distance measure used, the default is the internal levenshtein -->
      <str name="distanceMeasure">internal</str>
      <!-- minimum accuracy needed to be considered a valid spellcheck suggestion -->
      <float name="accuracy">0.5</float>
      <!-- the maximum #edits we consider when enumerating terms: can be 1 or 2 -->
      <int name="maxEdits">2</int>
      <!-- the minimum shared prefix when enumerating terms -->
      <int name="minPrefix">1</int>
      <!-- maximum number of inspections per result. -->
      <int name="maxInspections">5</int>
      <!-- minimum length of a query term to be considered for correction -->
      <int name="minQueryLength">4</int>
      <!-- maximum threshold of documents a query term can appear to be considered for correction -->
      <float name="maxQueryFrequency">0.01</float>
      <!-- uncomment this to require suggestions to occur in 1% of the documents
        <float name="thresholdTokenFrequency">.01</float>
      -->
    </lst>

    <!-- a spellchecker that can break or combine words.  See "/spell" handler below for usage -->
    <lst name="spellchecker">
      <str name="name">wordbreak</str>
      <str name="classname">solr.WordBreakSolrSpellChecker</str>
      <str name="field">SearchableText</str>
      <str name="combineWords">true</str>
      <str name="breakWords">true</str>
      <int name="maxChanges">10</int>
    </lst>

    <!-- Custom Spellchecker -->
    <lst name="spellchecker">
      <str name="name">suggest</str>
      <str name="classname">org.apache.solr.spelling.suggest.Suggester</str>
      <str name="lookupImpl">org.apache.solr.spelling.suggest.fst.WFSTLookupFactory</str>
      <str name="field">SearchableText</str>
      <float name="threshold">0.0005</float>
      <str name="buildOnCommit">true</str>
    </lst>

  </searchComponent>

  <!-- A request handler for demonstrating the spellcheck component.

       NOTE: This is purely as an example.  The whole purpose of the
       SpellCheckComponent is to hook it into the request handler that
       handles your normal user queries so that a separate request is
       not needed to get suggestions.

       IN OTHER WORDS, THERE IS REALLY GOOD CHANCE THE SETUP BELOW IS
       NOT WHAT YOU WANT FOR YOUR PRODUCTION SYSTEM!

       See http://wiki.apache.org/solr/SpellCheckComponent for details
       on the request parameters.
    -->
  <requestHandler name="/spell" class="solr.SearchHandler" startup="lazy">
    <lst name="defaults">
      <!-- Solr will use suggestions from both the 'default' spellchecker
           and from the 'wordbreak' spellchecker and combine them.
           collations (re-written queries) can include a combination of
           corrections from both spellcheckers -->
      <str name="spellcheck.dictionary">default</str>
      <str name="spellcheck.dictionary">wordbreak</str>
      <str name="spellcheck.dictionary">suggest</str>
      <str name="spellcheck">on</str>
      <str name="spellcheck.extendedResults">true</str>
      <str name="spellcheck.count">10</str>
      <str name="spellcheck.alternativeTermCount">5</str>
      <str name="spellcheck.maxResultsForSuggest">5</str>
      <str name="spellcheck.collate">true</str>
      <str name="spellcheck.collateExtendedResults">true</str>
      <str name="spellcheck.maxCollationTries">10</str>
      <str name="spellcheck.maxCollations">5</str>
    </lst>
    <arr name="last-components">
      <str>spellcheck</str>
    </arr>
  </requestHandler>



extra-field-types =
  <fieldType class="solr.TextField" name="text_auto">
    <analyzer>
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.ShingleFilterFactory" maxShingleSize="4" outputUnigrams="true"/>
      <filter class="solr.EdgeNGramFilterFactory" maxGramSize="20" minGramSize="1"/>
     </analyzer>
  </fieldType>
  <fieldType class="solr.TextField" name="text_desc">
    <analyzer>
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.ShingleFilterFactory" maxShingleSize="4" outputUnigrams="true"/>
      <filter class="solr.EdgeNGramFilterFactory" maxGramSize="20" minGramSize="1"/>
     </analyzer>
   </fieldType>

additional-schema-config =
  <copyField source="Title" dest="title_autocomplete" />
  <copyField source="Description" dest="description_autocomplete" />

[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
directory = ${buildout:directory}/src/plonetraining
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg.,omelette
flake8-max-complexity = 15


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
defaults = ['-s', 'plonetraining.solr_example', '--auto-color', '--auto-progress']


[versions]
# Don't use a released version of plonetraining.solr_example
plonetraining.solr_example =

setuptools = 24.3.0
zc.buildout = 2.5.2
zc.recipe.egg = 2.0.3
flake8 = 3.0.4
flake8-coding = 1.3.0
i18ndude = 4.0.1
robotframework = 3.0
robotframework-ride = 1.5.2.1
robotframework-selenium2library = 1.7.4
robotsuite = 1.7.0
selenium = 2.53.1
plone.testing = 5.0.0
collective.recipe.solrinstance = 6.0.0b3
collective.solr = 6.0a1
collective.dexteritytextindexer = 2.1.0
collective.indexing = 2.0b1
eea.facetednavigation = 10.0rc1
eea.faceted.vocabularies = 6.0
eea.jquery = 9.3
flake8-blind-except = 0.1.1
flake8-debugger = 1.4.0
flake8-deprecated = 1.0
flake8-isort = 2.0.1
flake8-pep3101 = 0.4
flake8-plone-api = 1.2
flake8-plone-hasattr = 0.1
flake8-print = 2.0.2
flake8-quotes = 0.8.1
flake8-string-format = 0.2.3
flake8-todo = 0.6
hexagonit.recipe.download = 1.7.1
mccabe = 0.5.2
plone.app.jquery = 1.11.2
plone.recipe.codeanalysis = 2.2
plone.rest = 1.0a6
pycodestyle = 2.0.0
pyflakes = 1.2.3


# Required by:
# collective.recipe.solrinstance==6.0.0b3
Genshi = 0.7

# Required by:
# plone.restapi==1.0a5
PyJWT = 1.4.2

# Required by:
# plone.recipe.codeanalysis==2.2
check-manifest = 0.34

# Required by:
# collective.solr==6.0a1
collective.js.showmore = 1.0a4

# Required by:
# flake8==3.0.4
configparser = 3.5.0

# Required by:
# flake8==3.0.4
enum34 = 1.1.6

# Required by:
# flake8-isort==2.0.1
flake8-polyfill = 1.0.1

# Required by:
# flake8-isort==2.0.1
isort = 4.2.5

# Required by:
# collective.loremipsum==0.11.dev0
loremipsum = 1.0.5

# Required by:
# collective.solr==6.0a1
plone.restapi = 1.0a5

# Required by:
# flake8-isort==2.0.1
testfixtures = 4.10.1

